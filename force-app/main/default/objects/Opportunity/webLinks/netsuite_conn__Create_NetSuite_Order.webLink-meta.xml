<?xml version="1.0" encoding="UTF-8"?>
<WebLink xmlns="http://soap.sforce.com/2006/04/metadata">
    <fullName>netsuite_conn__Create_NetSuite_Order</fullName>
    <availability>online</availability>
    <displayType>button</displayType>
    <linkType>javascript</linkType>
    <masterLabel>Create NetSuite Order</masterLabel>
    <openType>onClickJavaScript</openType>
    <protected>false</protected>
    <url>var Celigo = {};
	Celigo.SFDC = (function() {
		var opportunitySyncManager = function() {
				this.triggerSync = function() {
				this.openPopup();
			};

			this.openPopup = function() {

				var top = screen.height - (screen.height * .7) - 80,
				left = screen.width - (screen.width * .65) - 87,
				params = &apos;dependent = yes,resizable=yes,scrollbars=false,toolbar=false,menubar=false,location=false,status=true,directories=false,width=575,height=200,top=&apos;;

				params += top.toString();
				params += &apos;,left=&apos; + left.toString() + &apos;\&apos;&apos;;

				{!REQUIRESCRIPT(&quot;/soap/ajax/28.0/connection.js&quot;)}
				var resultOppStting = sforce.connection.query(&quot;select netsuite_conn__Account_Id__c from netsuite_conn__Opportunity_Sync_Settings__c where Name = \&apos;Opportunity Sync Settings\&apos;&quot;);
				var rocordsOppStting = resultOppStting.getArray(&quot;records&quot;);
				var selectedId = (rocordsOppStting[0].netsuite_conn__Account_Id__c).split(&apos;$$$&apos;)[0];
				var selectedValue = (rocordsOppStting[0].netsuite_conn__Account_Id__c).split(&apos;$$$&apos;)[1];
				var oppRecQuery = &quot;select &quot;+selectedId+&quot; from Opportunity where Id = &apos;&quot;+ &quot;{!Opportunity.Id}&quot; +&quot;&apos;&quot;;
				var oppRec = sforce.connection.query(oppRecQuery);
				var resultOppRec = oppRec.getArray(&quot;records&quot;);
				if (!resultOppRec[0][selectedId]) {
					alert(&quot;Please select &quot;+selectedValue+&quot; on the Opportunity to start the sync.&quot;);
					return;
				}
				if (&quot;{!Opportunity.netsuite_conn__Originated_From_NetSuite__c}&quot; === &apos;1&apos;) {
					alert(&quot;This Opportunity is created from NetSuite Sales Order, it can not create another Sales Order.&quot;);
					return;
				}
				/*------------------------------------------------------------------------------------------------------------------
				there is no way to check whether team selling feature is on/off so can&apos;t use opportunitysplit object in apex, 
				otherwise package inatall will fail where team selling is disabled. Hence utting js code back here, instead of apex.
				-------------------------------------------------------------------------------------------------------------------*/
			/*	var resultOppStting = sforce.connection.query(&quot;select Id, netsuite_conn__Enable_Team_Selling__c from netsuite_conn__Opportunity_Sync_Settings__c where Name = \&apos;Opportunity Sync Settings\&apos;&quot;);
				var rocordsOppStting = resultOppStting.getArray(&quot;records&quot;);
				if(rocordsOppStting &amp;&amp; 
				rocordsOppStting.length &gt; 0 &amp;&amp; 
				rocordsOppStting[0].netsuite_conn__Enable_Team_Selling__c == &quot;true&quot;) {
					
					var resultSplitCount = sforce.connection.query(&quot;SELECT COUNT(SplitOwnerId) total FROM OpportunitySplit where OpportunityId = &apos;&quot;+ &quot;{!Opportunity.Id}&quot; +&quot;&apos;&quot;);
					var recordsSplitCount = resultSplitCount.getArray(&quot;records&quot;);
					var resultDistinctSplitCount = sforce.connection.query(&quot;SELECT COUNT_DISTINCT(SplitOwnerId) total FROM OpportunitySplit where OpportunityId = &apos;&quot;+ &quot;{!Opportunity.Id}&quot; +&quot;&apos;&quot;);
					var recordsDistinctSplitCount = resultDistinctSplitCount.getArray(&quot;records&quot;);
					if(recordsSplitCount &amp;&amp; recordsDistinctSplitCount &amp;&amp;
					recordsSplitCount.length &gt; 0 &amp;&amp; recordsDistinctSplitCount.length &gt; 0 &amp;&amp;
					recordsSplitCount[0].total != recordsDistinctSplitCount[0].total) {
						alert(&quot;Opportunity split contains duplicate. Remove duplicate and try again.&quot;);
						return;
					}
				} */
				this.pu = window.open(&apos;/apex/netsuite_conn__Opportunity_Sync?whence=&apos;+&quot;{!Opportunity.Id}&quot;, &apos;NetSuite_Synchronization&apos;, params);
			};
		};

		return {
			main : function() {
				Celigo.opportunitySyncMgr = new opportunitySyncManager();
				Celigo.opportunitySyncMgr.triggerSync();
			}
		};
	})();
	Celigo.SFDC.main();</url>
</WebLink>
